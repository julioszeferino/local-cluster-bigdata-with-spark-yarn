version: '3.8'

services:
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    env_file:
      - .env
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-mc:
    image: minio/mc
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin && \
      mc mb myminio/production --ignore-existing && \
      mc mb myminio/development --ignore-existing && \
      mc mb myminio/development/$MINIO_BUCKET_LANDING --ignore-existing && \
      mc mb myminio/development/$MINIO_BUCKET_SPARK --ignore-existing && \
      mc mb myminio/development/$MINIO_BUCKET_SPARK/spark-events --ignore-existing && \
      mc mb myminio/development/$MINIO_BUCKET_SPARK/spark-libs --ignore-existing
      mc mb myminio/production/MINIO_BUCKET_LANDING --ignore-existing && \
      mc mb myminio/production/MINIO_BUCKET_SPARK --ignore-existing && \
      mc mb myminio/production/MINIO_BUCKET_SPARK/spark-events --ignore-existing && \
      mc mb myminio/production/MINIO_BUCKET_SPARK/spark-libs --ignore-existing
      "
    env_file:
      - .env

  cluster-spark-master:
    container_name: cluster-spark-master
    build: 
      context: .
      dockerfile: docker/spark.dockerfile
    image: cluster-spark:latest
    depends_on:
      - minio
      - minio-mc
    entrypoint: ['./entrypoint.sh', 'master']
    ports:
      - '9090:9090'
      - '7077:7077'
    volumes:
      - ./jobs:/opt/spark/jobs
      - ./data:/opt/spark/local-data
      - spark-data:/opt/spark/spark-events
    restart: always
    env_file:
      - .env

  cluster-spark-history-server:
    container_name: cluster-spark-history-server
    image: cluster-spark:latest
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - cluster-spark-master
    ports:
      - '18080:18080'
    env_file:
      - .env
    restart: always
    volumes:
      - spark-data:/opt/spark/spark-events

  cluster-spark-worker:
    image: cluster-spark:latest
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - cluster-spark-master
    env_file:
      - .env
    volumes:
      - ./jobs:/opt/spark/jobs
      - ./data:/opt/spark/local-data
      - spark-data:/opt/spark/spark-events
 
volumes:
  minio-data: 
  spark-data: